This is my additional instructions for the script that were posted in the forum.

[b][size=150]Script setup and installation[/size][/b]

* Download the script

* Open the file in a text editor (such as Notepadd++) and change the search path and sploitdir paths to reflect where you intend to upload the file to. In the following example I have uploaded the script outside of public_html and have told the script to search all of public_html and to create the scripts working directory at the same level as where I placed the script.

[code]# Where you want to search
  searchpath=public_html

## The location where the sploitFinder DB is to stored. This will be auto-generated at first execution
## Example: /opt/adminTools/ is where the sploitFinder script is and you want the DB stored in /opt/adminTools/sploitFinderDB/

  sploitdir=sploitFinderDB[/code]

* Save the file as sploitfinder.sh

* Upload the file to your domain placing the file outside of public_html. You do not want the script (or any other shell scripts) accessible from a public_area as this could be considered a security risk.

* Now we need to set the permissions on the script to 700 so that the script owner has read, write and execute privileges while we are testing. 

* The script should now be ready to test.

[b][size=150]Testing the script operation[/size][/b]

Testing the script can be accomplished in a couple ways. The method you use for testing depends on your host service and your level of experience.

 a. Testing the script if you have shell access to your account.
 b. Testing the script if you do not have shell access

[b][size=125]Testing the script if you have shell access:[/size][/b]

Using PuTTY open a terminal session to your account and change the directory to where you uploaded the sploitfinder.sh script.
Enter the following command and press return:

./sploitFinder.sh -ac

The result of the command will scroll by on the screen. View the result and make sure no errors were generated. If there were errors, correct them before proceeding.

If no errors were generated check and make sure the directory sploitFinderDB was created. It should have permissions of 700.

Check inside of directory sploitFinderDB for 2 text files; one called pid and one called last.

If everything checks out you can set up a cron job to run the script automatically.

[b][size=125]Testing the script if you do not have shell access[/size][/b]

If you do not have shell access to your account, you can use a cron job to test the script. Most hosting services will have this ability.

Go to your domains control panel and create a cron process following the procedure your domains control panel provides.
In the minute field enter
*/2
This will run the script every 2 minutes. Leave the rest of the time date settings as asterisks (*) 
In the command line enter the command desired.
/<your_loacation>/sploitFinder.sh -ac -m your@emailaddress.com

Save the cron job and if the cron runs without errors it will create the directory "sploitFinderDB" and the directory should have permissions of 700.

Check inside of directory sploitFinderDB for 2 text files; one called pid and one called last.

If everything checks out you can set up a cron job to run the script automatically.

[b][size=125]Scheduling the script to run from Cron at a reasonable times.[/size][/b]
 
 Create or set the cron job you made above in testing to run at something reasonable such as every 8 hours on Monday through Saturday at 02.10hrs, 10.10hrs & 16.10hrs. 

Add the >/dev/null 2>&1 to the end of the command when your making modifications to the time and days.
[b]Example:[/b]
10 2,10,18 * * 1-6 /<your_loacation>/sploitFinder.sh -c -m your@emailaddress.com.au >/dev/null 2>&1

This cron job runs every 8 hours on Monday through Saturday at 02.10hrs, 10.10hrs & 16.10hrs only of files changed since last report, showing context information and email report.

The second cron below runs once a week on Sunday at 02.10hrs and Resets/rebuilds the Baseline and mails out a full report of ALL files (-a implied)
[b]Example:[/b]
 10 2 * * 0 /<your_location>/sploitFinder.sh -rm your@emailaddress.com >/dev/null 2>&1

Once you are done with testing the script you should be able to change the permissions to 500 (read, execute) to make it more secure.

[b][size=125]Troubleshooting[/size][/b]

Most issues with the script will be the result of the wrong path information being supplied to the script.
Example error:
find: /public_html: No such file or directory

This error generally means that the search path is incorrect

Errors of permission denied when attempting to run the script can be the result of improper permissions on the script.
The permissions on the script should be 500 (700 while testing) and permissions on the directory sploitFinderDB should be 700.

Another cause of permission denied errors can be that your host has changed the command find to something else to increase security. In this case you will need to ask what the command to use instead of find and change the find command in the script ( ~ line 191) to the correct command.